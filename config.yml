http:
  address: localhost:8080
  metrics:
    enable: true
    token: aaaaaaaa
  session:
    enable: true
    # store:
    #   type: redis
    container:
      ## secretbox is default
      type: jwt
      # secretbox:
      #   key: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
      jwt:
        algorithm: hs256
        key: aaaaaaaa
    # validator:
    #   refresh: 5s
  proxy:
    enable: false
    upstreams:
      default: "http://127.0.0.1:8082"
  csrf:
    enable: true
    # FIXME: looks like CSRF checks is not working for providers, ha-ha :)
    # TODO: looks like back propagation of the information about paths (where CSRF is not required) from providers will not be an easy walk
    # we need to know prefix & paths inside provider + design some interface for main.go to get this information
    # TODO: same applies to session middleware
    # skip-paths:
    #   /auth/providers/oauth/token: {}
    #   /auth/providers/oidc/token: {}
    validator:
      enable: false
    container:
      secretbox:
        key: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

proxy:
  prefix: "/auth"
  user:
    retpath:
      rules:
        - type: "regexp"
          expr: "^/.+$"
    profile:
      rules:
        - type: "regexp"
          key: "mail"
          expr: "^[^@]+@corpix\\.ru$"
      headers:
        enable: true
        map:
          # NOTE: empty value removes header from headers list
          connector: ""
          display-name: ""
          avatar-url: ""

  connectors:
    enable: ["basic"]
    # slack:
    #   oauth:
    #     client-id: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    #     client-key: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    #     redirect-url: "https://localhost/goetia/connector/slack/callback"
    # oidc:
    #   label: "keycloak"
    #   oauth:
    #     auth-url: "https://keycloak/auth/realms/master/protocol/openid-connect/auth"
    #     token-url: "https://keycloak/auth/realms/master/protocol/openid-connect/token"
    #     client-id: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    #     client-key: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    #     redirect-url: "https://localhost/goetia/connector/oidc/callback"
    #   user-mappings:
    #     email: "mail"
    #     groups: "groups"
    #     name: "displayName"
    #     preferred_username: "name"
    #   user-url: "https://keycloak/auth/realms/master/protocol/openid-connect/userinfo"
    basic:
      users:
        corpix:
          password: "qwerty"
          # password-file: ...
          mail: "me@corpix.ru"
          groups: ["admin", "owner"]
          display-name: "Dmitry Moskowski"
          avatar-url: "https://avatars.githubusercontent.com/u/747362"
    # bypass:
    #   label: "bypass proxy auth"

  providers:
    enable:
      - oauth
      # - oidc
    oauth:
      token:
        container:
          type: jwt
          jwt:
            algorithm: hs512
            key: aaaaaaaa
      applications:
        app:
          label: "test app"
          key: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
          redirect-uri: "http://127.0.0.1:8080/non-existent/oauth2/callback"
          profile:
            map:
              connector: ""
              avatar-url: "image"
    oidc:
      token:
        container:
          type: jwt
          jwt:
            algorithm: hs512
            key: aaaaaaaa
      applications:
        app:
          label: "test app"
          key: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
          redirect-uri: "http://127.0.0.1:8080/non-existent/oauth2/callback"
