* DONE template to intercept errors
need a template to intercept errors like "internal server error" and show them
this could be a feature of the existing gdk middleware named "recover"
* DONE attach base templates
like document (container) page and index page which list connectors
* DONE send headers with user information
make this behaviour configurable
* DONE reimplement retpath
* DONE consistent rules to validate retpaths
* DONE validate user profiles
* DONE reimplement reverse proxy support
* DONE oauth2 per-application profile remap rules
* DONE oauth2 provider
basic oauth2 flow to allow other applications to authenticate against goetia
* DONE test oauth2 provider with goth client
need an automated test so we could test at most some parts of the flow (authorize -> code -> access token -> profile)
* TODO more granular error codes
we can send 500 http code for each error, but want to have 400 and other as well
which should depend on the recover error type
should clean up all panics from code or better - cover all f them with correct types so we could handle them
maybe GDK requres some basic error type we could use
* TODO per-application profile validation rules
* TODO global event bus
event such as "signout" or "signin" should be global
any event could be handled by connector/provider/anybody else
all of this as part of the request/response flow
this will allow us to implement an audit log
and some other features
like connector/provider token refreshes
or signout clean up on the connector side
* TODO support multiple proxy inside one process
not sure we need this, but this was a feature we have in the past, why not support this?
* TODO proxy virtual hosts support
  to support multiple servers inside one process
  hierarchy: listener -> []hostnames
* TODO granular restrictions
  support granulare restrictions on user profile information (rules?)
  like =mail should match regexp .+@example\.com=
  best option is to make it possible to define this rules
  for each user profile field

* DONE implement some sort of "mode"?
- reverse proxy mode
- nginx auth responder mode
- auth provider mode
- ...?

<2022-09-07 Wed> don't think this is really required, have http.proxy.enable, this should cover most cases

* DONE configurable header names
<2022-09-07 Wed> done via proxy.user.headers.map

* TODO providers as plugins
  extend providers registry without codebase modifications
  (go plugins)

  or use grpc + sdk approach (something like terraform uses, but make it waaaay simplier)

* TODO contexts support for cancelation & timeouts
* TODO slack refresh tokens
  have no clue how the fuck it should be implemented, docs are outdated and unclear

* TODO a way to run connector code on signout
signout for basic auth is not consistent
(you sould sign in after sign out without entering a password)

* DONE login into grafana

<2022-09-05 Mon> wtf is wrong with you?
#+begin_src console
ERROR[09-05|13:35:08] Failed to search JSON for attribute      logger=oauth.generic_oauth error="failed to search user info JSON response with provided path: \"display-name\": SyntaxError: Unexpected token at the end of the expression: tNumber"
WARN [09-05|13:35:08] Failed to extract role                   logger=oauth.generic_oauth error="failed to search user info JSON response with provided path: \"contains(groups[*], 'admin') && 'Admin' || contains(groups[*], 'editor') && 'Editor' || 'Viewer'\": Invalid type for: <nil>, expected: []jmespath.jpType{\"array\", \"string\"}"
#+end_src

regarding =display-name=: for some reason it doesnt like =-= in key.

<2022-09-07 Wed> ok, will use gojq to postprocess user profiles, so we could have clean grafana setup. done
* TODO fix csrf validation of session was invalid
#+begin_src console
9:58PM WRN invalid session, created new error="failed to validate session" method=GET request-id=626d0b99-0969-48bd-9411-a391cb7e8a56 session={"header":{"valid-after":"2022-09-06T18:11:50Z","valid-before":"2022-09-07T18:11:50Z"},"payload":{"csrf-nonce":4732133495224656000,"user-profile":{"avatar-url":"https://avatars.githubusercontent.com/u/747362","connector":"basic","display-name":"Dmitry Moskowski","groups":"admin,owner","mail":"me@corpix.ru","name":"corpix"}}} url=/auth/
9:58PM INF request code=200 duration=1.347273 method=GET request-id=626d0b99-0969-48bd-9411-a391cb7e8a56 url=/auth/ written=19012
9:58PM WRN csrf token validation failed error="csrf token nonce does not match the expected nonce" expected-nonce=1287580923372519936 method=POST request-id=15aafedc-b6a4-4cf4-8b94-58d3bce8cf43 token={"header":{"valid-after":"2022-09-11T21:58:44.142865013Z","valid-before":"2022-09-12T21:58:44.142865013Z"},"payload":{"nonce":1287580923372519852,"path":"/auth/connectors/basic/"}} token-nonce=1287580923372519852 url=/auth/connectors/basic/
#+end_src

* DONE implement =id_token=
OIDC (and gitea) requires this token to contain user information, not sure how it's signature qill be matched agains jwks, will see
* TODO create telegram connector
sign in with telegram, but not using telegram's oauth:
- make a bot
- add bot to group
- list this groups in config (id's)
- show user a link to bot with prepared =/start XXXX=
- where =XXXX= is a signed token which serves a rendezvous point between server & client
- client should listen for events from server on this rendezvous point, where it may receive a session

polling should be enough on start (progressive interval degradation after 60s may be a smart move)

** DONE gdk generalized token service
required to created minimal signed strings
* DONE fix metrics endpoint
it requires session, should seed middleware which causes this with skip paths
* TODO make /metrics 404 page indistinguishable from other with same code
